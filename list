#!/usr/bin/env bash

__SOURCE__="${BASH_SOURCE[0]}"
while [[ -h "${__SOURCE__}" ]]; do
    __SOURCE__="$(find "${__SOURCE__}" -type l -ls | sed -n 's@^.* -> \(.*\)@\1@p')"
done
__DIR__="$(cd -P "$(dirname "${__SOURCE__}")" && pwd)"
__NAME__="${__SOURCE__##*/}"
__AUTHOR__='S0AndS0'
__DESCRIPTION__='Runs "ls -hl" against supplied path within home directory'


## Provides: argument_parser <arg-array-reference> <acceptable-arg-reference>
source "${__DIR__}/shared_functions/modules/argument-parser/argument-parser.sh"

## Provides: '__license__ <description> <author>'
source "${__DIR__}/shared_functions/license"


usage(){
    _message="${1}"
    _path="${_path:-${HOME}/git-shell-commands}"
    _print_path="${_path//${HOME}\//}"
    cat <<EOF
## Usage
# ssh ${USER}@host-or-ip ${__NAME__} ${_print_path}
#
# ${__DESCRIPTION__}
#
# -l --license
# Shows script or project license then exits
#
# -h    --help help
#  Displays this message and exits
#
EOF
    (("${#_message}")) && [[ "${_message}" != '0' ]] && {
        printf >&2 'Error - %s\n' "${_message}"
    } || {
        printf '# Example of: list %s\n' "${__NAME__}"
        ls -hl "${HOME}/git-shell-commands"
    }
}

_args=("${@:?# No arguments provided try: ${__NAME__} help}")
_valid_args=('--help|-h|help:bool'
             '--license|-l|license:bool'
             '--path:path-nil')
argument_parser '_args' '_valid_args'
_exit_status="${?}"


if ((_help)) || ((_exit_status)); then
    usage "${_exit_status}"
    exit "${_exit_status}"
elif ((_license)); then
    __license__ "${__DESCRIPTION__}" "${__AUTHOR__}"
    exit 0
fi

(("${#_path}")) || {
    usage 'missing path argument!'
    exit "1"
}


if [ -d "${HOME}/${_path}" ]; then
    ls -hl "${HOME}/${_path}"; exit $?
elif [ -f "${HOME}/${_path}" ]; then
    ls -hl "${HOME}/${_path}"; exit $?
else
    usage; exit 1
fi

printf '# %s finished\n' "${__NAME__}"
